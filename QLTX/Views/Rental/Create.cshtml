@model QLTX.ViewModels.CreateRental

@{
	ViewData["Title"] = "Create Rental";
	Layout = "~/Views/Shared/_Layout.cshtml";
}


<main>
	<div class="container-fluid px-4">
		<h2 class="mt-4">Thêm mới đơn thuê</h2>
		<ol class="breadcrumb mb-4">
			<li class="breadcrumb-item active">Đơn thuê xe</li>
		</ol>

		<hr />
		<div class="row">
			<div class="col-md-8">
				<form asp-action="Create">
					<div asp-validation-summary="ModelOnly" class="text-danger"></div>

					<div class="mb-3">
						<label asp-for="IdCustomer" class="control-label mb-2">Khách hàng</label>
						<select asp-for="IdCustomer" class="form-control" asp-items="ViewBag.IdCustomer"></select>
						<span asp-validation-for="IdCustomer" class="text-danger"></span>
					</div>
					<div class="row">
						<div class="col-md-6 mb-3">
							<label asp-for="DateRetalFrom" class="control-label mb-2">Ngày bắt đầu thuê</label>
							<div class="input-group">
								<input asp-for="DateRetalFrom" class="form-control" id="DateRetalFrom" type="datetime-local" />
								<span class="input-group-text"><i class="fas fa-calendar-alt"></i></span>
							</div>
							<span asp-validation-for="DateRetalFrom" class="text-danger"></span>
						</div>

						<div class="col-md-6 mb-3">
							<label asp-for="DateRetalTo" class="control-label mb-2">Ngày kết thúc thuê</label>
							<div class="input-group">
								<input asp-for="DateRetalTo" class="form-control" id="DateRetalTo" type="datetime-local" />
								<span class="input-group-text"><i class="fas fa-calendar-alt"></i></span>
							</div>
							<span asp-validation-for="DateRetalTo" class="text-danger"></span>
						</div>
					</div>

					<div class="row">
						<div class="col-md-6 mb-3">

							<label asp-for="RetalTime" class="control-label mb-2">Thời gian thuê</label>
							<input asp-for="RetalTime" class="form-control" id="RetalTime" type="text" readonly />
							<span asp-validation-for="RetalTime" class="text-danger"></span>

						</div>

						<div class="col-md-6 mb-3">

							<label asp-for="Service" class="control-label mb-2">Dịch vụ thuê</label>
							<select asp-for="Service" class="form-control" id="Service">
								<option value="1">Giờ</option>
								<option value="2">Ngày</option>
								<option value="3">Tuần</option>
							</select>
							<span asp-validation-for="Service" class="text-danger"></span>

						</div>
					</div> 
					 
					<div class="row">
						<div class="col-md-6 mb-3"> 
								<label asp-for="Price" class="control-label mb-2">Đơn giá</label>
								<input asp-for="Price" class="form-control" />
								<span asp-validation-for="Price" class="text-danger"></span>  
						</div>

						<div class="col-md-6 mb-3">
							<label asp-for="Total" class="control-label mb-2">Thành tiền</label>
							<input asp-for="Total" class="form-control" />
							<span asp-validation-for="Price" class="text-danger"></span>
						</div>
					</div>
					<div class=" mb-3">
						<label asp-for="Note" class="control-label mb-2">Ghi chú</label>
						<input asp-for="Note" class="form-control" />
						<span asp-validation-for="Note" class="text-danger"></span>
					</div>
					 
					<div class="mb-3">
						 
						<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#vehicleModal">Chọn xe</button>
						<input asp-for="EmotorIds" type="hidden" />
						<div id="selectedVehicles" class="mt-2"></div>
						<span asp-validation-for="EmotorIds" class="text-danger"></span>
					</div>

					<div class="form-group d-flex justify-content-between align-items-center">
						<a asp-action="Index" class="btn btn-secondary">Đóng</a>
						<button type="submit" class="btn btn-primary">
							<i class="fas fa-save"></i> Lưu
						</button>
					</div>
				</form>

				 
				<div class="modal fade" id="vehicleModal" tabindex="-1" aria-labelledby="vehicleModalLabel" aria-hidden="true">
					<div class="modal-dialog modal-lg">
						<div class="modal-content">
							<div class="modal-header">
								<h5 class="modal-title" id="vehicleModalLabel">Chọn xe</h5>
								<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
							</div>
							<div class="modal-body scoll-y">
								<div class="row">
									@foreach (var vehicle in Model.Emotors)
									{
										<div class="col-md-4">
											<div class="card mb-4">
												<div class="card-img-container">
													<img src="@vehicle.ImageUrl" class="card-img-top" alt="@vehicle.License">
												</div>
												<div class="card-body">
													<h5 class="card-title">@vehicle.License</h5>
													<p class="card-text">@vehicle.VinNumber</p>
													<button type="button" class="btn btn-primary select-vehicle" data-id="@vehicle.Id" data-license="@vehicle.License">Chọn</button>
												</div>
											</div>
										</div>

									}
								</div>
							</div>
							<div class="modal-footer">
								<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
							</div>
						</div>
					</div>
				</div>
				<style>
					.card-img-container {
						height: 200px; /* Điều chỉnh chiều cao tùy vào nhu cầu */
						overflow: hidden;
						display: flex;
						align-items: center;
						justify-content: center;
					}

					.card-img-top {
						width: 100%;
						height: 100%;
						object-fit: cover;
					}

					.btn-selected {
						background-color: gray !important;
						border-color: gray !important;
						color: white !important; /* Điều chỉnh màu chữ nếu cần */
					}

				</style>

				@section Scripts {
					@{
						await Html.RenderPartialAsync("_ValidationScriptsPartial");
					}
					<script>
						document.addEventListener('DOMContentLoaded', function () {
							document.querySelectorAll('.select-vehicle').forEach(button => {
								button.addEventListener('click', function () {
									const vehicleId = this.getAttribute('data-id');
									const vehicleLicense = this.getAttribute('data-license');

									const emotorIdsInput = document.querySelector('input[name="EmotorIds"]');
									let selectedEmotorIds = emotorIdsInput.value ? emotorIdsInput.value.split(',') : [];
									if (!selectedEmotorIds.includes(vehicleId)) {
										selectedEmotorIds.push(vehicleId);
										emotorIdsInput.value = selectedEmotorIds.join(',');

										const selectedVehiclesDiv = document.getElementById('selectedVehicles');
										const vehicleElement = document.createElement('div');
										vehicleElement.textContent = vehicleLicense;
										selectedVehiclesDiv.appendChild(vehicleElement);
									}
								});
							});

							document.getElementById('DateRetalFrom').addEventListener('change', calculateRentalTime);
							document.getElementById('DateRetalTo').addEventListener('change', calculateRentalTime);
							document.getElementById('Service').addEventListener('change', calculateRentalTime);
						});

						function calculateRentalTime() {
							var startDateValue = document.getElementById('DateRetalFrom').value;
							var endDateValue = document.getElementById('DateRetalTo').value;
							var serviceType = document.getElementById('Service').value;

							if (startDateValue && endDateValue) {
								var startDate = new Date(startDateValue);
								var endDate = new Date(endDateValue);

								if (startDate <= endDate) {
									var timeDiff = endDate - startDate;

									var rentalTime;
									switch (serviceType) {
										case '1': // Hours
											var hoursDiff = Math.ceil(timeDiff / (1000 * 60 * 60));
											rentalTime = hoursDiff + " giờ";
											break;
										case '2': // Days
											var daysDiff = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));
											rentalTime = daysDiff + " ngày";
											break;
										case '3': // Weeks
											var weeksDiff = Math.ceil(timeDiff / (1000 * 60 * 60 * 24 * 7));
											rentalTime = weeksDiff + " tuần";
											break;
										default:
											rentalTime = '';
									}

									document.getElementById('RetalTime').value = rentalTime;
								} else {
									document.getElementById('RetalTime').value = '';
								}
							} else {
								document.getElementById('RetalTime').value = '';
							}
						}

						function calculateAndDisplayPrice(serviceType, timeDiff) {
 

							var price;
							switch (serviceType) {
								case '1': // Hours
									price = (timeDiff / (1000 * 60 * 60)) * pricePerHour;
									break;
								case '2': // Days
									price = (timeDiff / (1000 * 60 * 60 * 24)) * pricePerDay;
									break;
								case '3': // Weeks
									price = (timeDiff / (1000 * 60 * 60 * 24 * 7)) * pricePerWeek;
									break;
								default:
									price = 0;
							} 
						}
						$(document).ready(function () {
							var selectedVehicles = [];  

							$('.select-vehicle').on('click', function () {
								var vehicleId = $(this).data('id'); 
								 
								if (selectedVehicles.includes(vehicleId)) {
									 
									var index = selectedVehicles.indexOf(vehicleId);
									if (index > -1) {
										selectedVehicles.splice(index, 1); 
									}
									$(this).removeClass('btn-selected').addClass('btn-primary').text('Chọn');
								} else {
									 
									selectedVehicles.push(vehicleId);
									$(this).removeClass('btn-primary').addClass('btn-selected').text('Đã chọn');
								}
							});
						});

						function calculateAndDisplayPrice(serviceType, timeDiff) {
							var pricePerHour = @Model.Config.PriceHour; // Lấy giá trị từ ViewModel hoặc từ bảng Config
							var pricePerDay = @Model.Config.PriceDay;
							var pricePerWeek = @Model.Config.PriceWeek;

							var price;
							switch (serviceType) {
								case '1': // Hours
									price = (timeDiff / (1000 * 60 * 60)) * pricePerHour;
									break;
								case '2': // Days
									price = (timeDiff / (1000 * 60 * 60 * 24)) * pricePerDay;
									break;
								case '3': // Weeks
									price = (timeDiff / (1000 * 60 * 60 * 24 * 7)) * pricePerWeek;
									break;
								default:
									price = 0;
							}

							// Hiển thị giá trị trong input Thành tiền
							document.getElementById('Total').value = price.toFixed(2);

							function calculateRentalTime() {
								var startDateValue = document.getElementById('DateRetalFrom').value;
								var endDateValue = document.getElementById('DateRetalTo').value;
								var serviceType = document.getElementById('Service').value;

								if (startDateValue && endDateValue) {
									var startDate = new Date(startDateValue);
									var endDate = new Date(endDateValue);

									if (startDate <= endDate) {
										var timeDiff = endDate - startDate;

										var rentalTime;
										switch (serviceType) {
											case '1': // Hours
												var hoursDiff = Math.ceil(timeDiff / (1000 * 60 * 60));
												rentalTime = hoursDiff + " giờ";
												break;
											case '2': // Days
												var daysDiff = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));
												rentalTime = daysDiff + " ngày";
												break;
											case '3': // Weeks
												var weeksDiff = Math.ceil(timeDiff / (1000 * 60 * 60 * 24 * 7));
												rentalTime = weeksDiff + " tuần";
												break;
											default:
												rentalTime = '';
										}

										document.getElementById('RetalTime').value = rentalTime;
										calculateAndDisplayPrice(serviceType, timeDiff); // Gọi hàm tính toán giá
									} else {
										document.getElementById('RetalTime').value = '';
										document.getElementById('Total').value = '';
									}
								} else {
									document.getElementById('RetalTime').value = '';
									document.getElementById('Total').value = '';
								}
							}

							function calculateAndDisplayPrice(serviceType, timeDiff) {
								var pricePerHour = @Model.Config.PriceHour; // Lấy giá trị từ ViewModel hoặc từ bảng Config
								var pricePerDay = @Model.Config.PriceDay;
								var pricePerWeek = @Model.Config.PriceWeek;

								var price;
								switch (serviceType) {
									case '1': // Hours
										price = (timeDiff / (1000 * 60 * 60)) * pricePerHour;
										break;
									case '2': // Days
										price = (timeDiff / (1000 * 60 * 60 * 24)) * pricePerDay;
										break;
									case '3': // Weeks
										price = (timeDiff / (1000 * 60 * 60 * 24 * 7)) * pricePerWeek;
										break;
									default:
										price = 0;
								}

								// Hiển thị giá trị trong input Thành tiền
								document.getElementById('Total').value = price.toFixed(2);

					</script>
				}
			</div>
		</div>
	</div>
</main>

