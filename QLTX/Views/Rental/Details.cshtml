@model QLTX.Models.Rental

@{
    ViewData["Title"] = "Chi tiết đơn thuê";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int index = 1;
    var serviceText = "";
    var overdueTime = TimeSpan.Zero;
    var lateFee = 0;
    
    switch (Model.Service)
    {
        case RentalService.Hour:

            serviceText = "Giờ";
            break;
        case RentalService.Day:

            serviceText = "Ngày";
            break;
        case RentalService.Week:

            serviceText = "Tuần";
            break;
    }
     
    if (Model.Status == RentalStatus.Expired)
    {
        var now = DateTime.Now;
        if (now > Model.DateRetalTo)
        {
            overdueTime = now - Model.DateRetalTo;

            // Calculate late fee
            var totalMinutes = (int)overdueTime.TotalMinutes;
            lateFee = (totalMinutes / 30) * 5000; // 5,000 đ per 30 minutes
        }
    }
}

<main>
    <div class="container-fluid px-4">
        <h2 class="mt-4">Chi tiết đơn thuê</h2>
        <hr />
        <dl class="row">
            <dt class="col-sm-2">
                Khách hàng
            </dt>
            <dd class="col-sm-10">
                @Model.Customer.Name - @Model.Customer.IdDocument
            </dd>
            <dt class="col-sm-2">
                Ngày thuê
            </dt>
            <dd class="col-sm-10">
                @Model.DateRetalFrom.ToString("dd/MM/yyyy HH:mm")
            </dd>
            <dt class="col-sm-2">
                Ngày trả
            </dt>
            <dd class="col-sm-10">
                @Model.DateRetalTo.ToString("dd/MM/yyyy HH:mm")
            </dd>
            <dt class="col-sm-2">
                Thời gian thuê 
            </dt>
            <dd class="col-sm-10">
                @Model.RetalTime @serviceText
            </dd>
            <dt class="col-sm-2">
                Trạng thái
            </dt>
            <dd class="col-sm-10">
                @if (Model.Status == RentalStatus.Renting)
                {
                    <span class="bg-warning">Đang thuê</span>
                }
                else if (Model.Status == RentalStatus.Success)
                {
                    <span class="bg-success">Hoàn thành</span>
                }
                else if (Model.Status == RentalStatus.Cancel)
                {
                    <span class="bg-secondary">Hủy</span>
                }
                else if (Model.Status == RentalStatus.Expired)
                {
                    <span class="bg-danger">Quá hạn</span>
                }
            </dd>
            @if (overdueTime > TimeSpan.Zero)
            {
                <dt class="col-sm-2">
                    Thời gian quá hạn
                </dt>
                <dd class="col-sm-10">
                    @if (overdueTime.TotalMinutes < 60)
                    {
                        @($"{overdueTime.Minutes} phút")
                    }
                    else if (overdueTime.TotalHours < 24)
                    {
                        @($"{overdueTime.Hours} giờ, {overdueTime.Minutes} phút")
                    }
                    else
                    {
                        @($"{overdueTime.Days} ngày, {overdueTime.Hours % 24} giờ, {overdueTime.Minutes} phút")
                    }
                </dd>
                <dt class="col-sm-2">
                    Phí quá hạn
                </dt>
                <dd class="col-sm-10">
                    @string.Format("{0:0,0} đ", lateFee)
                </dd>
            }
            <dt class="col-sm-2">
                Đơn giá trung bình
            </dt>
            <dd class="col-sm-10">
                @string.Format("{0:0,0} đ", @Model.Price)
            </dd>
            <dt class="col-sm-2">
                Thành tiền
            </dt>
            <dd class="col-sm-10">
                @string.Format("{0:0,0} đ", @Model.Total)
            </dd>
           
            @if (Model.Note is not null)
            {
                <dt class="col-sm-2">
                Ghi chú
            </dt>
            <dd class="col-sm-10">
                @Model.Note
            </dd>
            }
            
            <dt class="col-sm-2">
                Tạo bởi
            </dt>
            <dd class="col-sm-10">
                @Model.CreatedBy - @Model.CreationTime.ToString("dd/MM/yyyy HH:mm")
            </dd>
            @if (!string.IsNullOrEmpty(Model.UpdatedBy))
            {
                <dt class="col-sm-2">
                    Cập nhật lần cuối bởi
                </dt>
                <dd class="col-sm-10">
                    @Model.UpdatedBy - @Model.UpdationTime?.ToString("dd/MM/yyyy HH:mm")
                </dd>
            }
        </dl>

        <h3 class="mt-4">Danh sách xe thuê</h3>
        <div class="card mb-4">
            <div class="card-body">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>STT</th>
                            <th>Biển số xe</th>
                            <th>VIN</th>
                            <th>Giá thuê</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var detail in Model.RentlDetails)
                        {  
                            <tr>
                                <td>@index</td>
                                <td>@(detail.EMotorbike.License)</td>
                                <td>@(detail.EMotorbike.VinNumber)</td>
                                <td>@string.Format("{0:0,0} đ/h", (detail.EMotorbike.TypeMotorbike.Price))</td>
                            </tr>
                            index++;
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-2">
                <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary">Cập nhật</a>
            </div>
            <div class="col-sm-10">
                <a asp-action="Index" class="btn btn-secondary">Đóng</a>
            </div>
        </div>
    </div>
</main>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
<style>
    .bg-warning {
        background-color: #ffc107; /* Bootstrap warning color */
        color: white; /* Text color */
        border-radius: 5px;
        padding: 3px
    }

    .bg-success {
        background-color: #28a745; /* Bootstrap success color */
        color: white; /* Text color */
        border-radius: 5px;
        padding: 3px
    }

    
    .bg-danger {
        background-color: #dc3545; /* Bootstrap danger color */
        color: white; /* Text color */
        border-radius: 5px;
        padding: 3px
    }

    .bg-secondary {
        background-color: #6C757D; /* Bootstrap danger color */
        color: white; /* Text color */
        border-radius: 5px;
        padding: 3px
    }
</style>