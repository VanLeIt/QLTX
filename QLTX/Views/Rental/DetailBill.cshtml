        @model QLTX.Models.Rental

@{
	ViewData["Title"] = "Chi tiết đơn thuê";
	Layout = "~/Views/Shared/_Layout.cshtml";
	int index = 1;
	var serviceText = "";
	switch (Model.Service)
	{
		case RentalService.Hour:
			serviceText = "Giờ";
			break;
		case RentalService.Day:
			serviceText = "Ngày";
			break;
		case RentalService.Week:
			serviceText = "Tuần";
			break;
	}


}

<main>
	<div class="container-fluid px-4">
		<h2 class="mt-4 text-center">Hóa đơn thuê xe</h2>
		<hr />

		<dl class="row">
			<dt class="col-sm-4">
				Khách hàng
			</dt>
			<dd class="col-sm-8">
				@Model.Customer.Name - @Model.Customer.IdDocument
			</dd>
			<dt class="col-sm-4">
				Ngày thuê
			</dt>
			<dd class="col-sm-8">
				@Model.DateRetalFrom.ToString("dd/MM/yyyy HH:mm")
			</dd>
			<dt class="col-sm-4">
				Ngày trả
			</dt>
			<dd class="col-sm-8">
				@Model.DateRetalTo.ToString("dd/MM/yyyy HH:mm")
			</dd>
			<dt class="col-sm-4">
				Thời gian thuê
			</dt>
			<dd class="col-sm-8">
				@Model.RetalTime @serviceText
			</dd>

			<dt class="col-sm-4">
				Đơn giá trung bình
			</dt>
			<dd class="col-sm-8">
				@string.Format("{0:0,0} đ", @Model.Price)
			</dd>
			<dt class="col-sm-4">
				Thành tiền dự kiến
			</dt>
			<dd class="col-sm-8">
				@string.Format("{0:0,0} đ", @Model.Total)
			</dd>





			@if (Model.Note is not null)
			{
				<dt class="col-sm-4">
					Ghi chú
				</dt>
				<dd class="col-sm-8">
					@Model.Note
				</dd>
			}

			<dt class="col-sm-4">
				Tạo bởi
			</dt>
			<dd class="col-sm-8">
				@Model.CreatedBy - @Model.CreationTime.ToString("dd/MM/yyyy HH:mm")
			</dd>
			@if (!string.IsNullOrEmpty(Model.UpdatedBy))
			{
				<dt class="col-sm-4">
					Cập nhật lần cuối bởi
				</dt>
				<dd class="col-sm-8">
					@Model.UpdatedBy - @Model.UpdationTime?.ToString("dd/MM/yyyy HH:mm")
				</dd>
			}
			@if (Model.LateFee > 0)
			{
				<dt class="col-sm-4">
					Thời gian quá hạn
				</dt>
				<dd class="col-sm-8">
					@Model.DateExpired?.ToString("dd/MM/yyyy HH:mm") ( @Model.ExpiredTime)
				</dd>
				<dt class="col-sm-4">
					Phí quá hạn
				</dt>
				<dd class="col-sm-8">
					@string.Format("{0:0,0} đ", Model.LateFee)
				</dd>
			}
			@if (Model.TotalBroken > 0)
			{
				<dt class="col-sm-4">
					Chi tiết xe hỏng
				</dt>
				<dd class="col-sm-8">
					@Model.DetailBroken
				</dd>
				<dt class="col-sm-4">
					Phí bồi thường hỏng xe
				</dt>
				<dd class="col-sm-8">
					@string.Format("{0:0,0} đ", Model.TotalBroken)
				</dd>
			}
			<dt class="col-sm-4">
				Tổng tiền thanh toán:
			</dt>
			<dd class="col-sm-8 ">
				@string.Format("{0:0,0} đ", @Model.SumTotal)
			</dd>
		</dl>


		<h3 class="mt-4">Danh sách xe thuê</h3>
		<div class="card mb-4">
			<div class="card-body">
				<table class="table table-striped">
					<thead>
						<tr>
							<th>STT</th>
							<th>Biển số xe</th>
							<th>VIN</th>
							<th>Giá thuê</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var detail in Model.RentlDetails)
						{
							<tr>
								<td>@index</td>
								<td>@(detail.EMotorbike.License)</td>
								<td>@(detail.EMotorbike.VinNumber)</td>
								<td>@string.Format("{0:0,0} đ/h", (detail.EMotorbike.TypeMotorbike.Price))</td>
							</tr>
							index++;
						}
					</tbody>
				</table>
			</div>
		</div>

		<div class="row print-hidden" >

			<div class="col-sm-5">
				 
					<button class="btn btn-warning" onclick="window.print()">
						<i class="fas fa-print"></i> Xuất hóa đơn
					</button>
				 
			</div>
			<div class="col-sm-5">
				<a asp-action="IndexBill" class="btn btn-secondary">Đóng</a>
			</div>
		</div>
	</div>
	
</main>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
} 
